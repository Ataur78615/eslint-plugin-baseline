// lib/rules/no-non-baseline-api.js
module.exports = {
  meta: {
    type: 'problem',
    docs: {
      description: 'Warn when using selected non-Baseline web platform APIs (starter map)',
      recommended: false
    },
    messages: {
      notBaseline: "'{{name}}' may not be Baseline across all major browsers yet. Consider fallback or polyfill. See README for details."
    },
    schema: []
  },

  create(context) {
    // Starter local map: featureName -> baseline boolean
    const localBaselineMap = {
      OffscreenCanvas: { id: 'offscreen-canvas', baseline: false },
      'document.pictureInPictureEnabled': { id: 'picture-in-picture', baseline: false }
    };

    return {
      NewExpression(node) {
        if (node.callee && node.callee.type === 'Identifier') {
          const name = node.callee.name;
          if (localBaselineMap[name] && !localBaselineMap[name].baseline) {
            context.report({
              node,
              messageId: 'notBaseline',
              data: { name }
            });
          }
        }
      },

      MemberExpression(node) {
        // check document.pictureInPictureEnabled
        if (
          node.object &&
          node.object.type === 'Identifier' &&
          node.object.name === 'document' &&
          node.property &&
          ((node.property.type === 'Identifier' && node.property.name === 'pictureInPictureEnabled') ||
           (node.property.type === 'Literal' && node.property.value === 'pictureInPictureEnabled'))
        ) {
          const name = 'document.pictureInPictureEnabled';
          if (localBaselineMap[name] && !localBaselineMap[name].baseline) {
            context.report({
              node,
              messageId: 'notBaseline',
              data: { name }
            });
          }
        }
      }
    };
  }
};
